{"version":3,"sources":["sections/header/assets/node-js.jpg","tools/theme/mergeClasses.ts","components/Section/Section.tsx","components/DesignHighlights/LinesDesignHighlight.tsx","components/Timeline/Timeline.tsx","components/Typography/Typography.tsx","components/Typography/BackgroundTypography.tsx","components/Timeline/TimelineItem.tsx","components/SectionsScroller/SectionsScrollerContext.tsx","components/SectionsScroller/SectionIndicator.tsx","components/SectionsScroller/SectionsScrollerItem.tsx","components/SectionsScroller/SectionsScroller.tsx","tools/utils/ColorUtils.ts","sections/header/HeaderSection.tsx","sections/aboutMe/assets/me.jpg","sections/aboutMe/components/MeImage.tsx","components/DesignHighlights/Triangles.tsx","sections/aboutMe/AboutMeSection.tsx","tools/theme/theme.ts","sections/timeline/TimelineSection.tsx","App.tsx","index.tsx"],"names":["mergeClasses","baseClasses","additionalClasses","combinedClasses","name","useStyles","createUseStyles","root","position","overflow","minHeight","width","Section","forwardRef","props","ref","children","className","classesProp","classes","restProps","clsx","theme","background","palette","primary","light","backgroundSize","height","LinesDesignHighlight","displayName","display","flexDirection","alignSelf","marginRight","marginLeft","dot","line","content","Timeline","React","Children","map","child","index","duration","direction","cloneElement","alignment","fontFamily","margin","color","text","headlineBig","fontSize","letterSpacing","subHeadlineBig","secondary","noWrap","whiteSpace","componentMapping","Typography","variant","Component","textTransform","textAlign","zIndex","backgroundText","top","left","transform","BackgroundTypography","lastItem","lineContainer","alignItems","marginTop","marginBottom","spacing","undefined","backgroundColor","padding","maxWidth","borderRadius","flex","headline","TimelineItem","SectionsScrollerContext","createContext","SectionsScrollerContextProvider","store","useTheme","useState","common","white","setColor","useStore","Provider","value","useSectionsScrollerContext","useContext","listStyleType","item","transition","active","SectionIndicator","sectionsCount","activeSectionIndex","Array","fill","_","SectionsScrollerItem","sectionIndex","onPageChange","rootRef","useRef","onWheel","event","current","scrollUp","deltaY","scrollDown","isScrollBarTop","scrollTop","isScrollBarBottom","scrollHeight","clientHeight","sectionIndicator","right","SectionsScroller","activeIndex","setActiveIndex","count","style","hexToRGB","hex","red","parseInt","slice","green","blue","rgbToHex","rgbString","matcher","exec","Number","toString","addAlpha","hexOrRGB","alpha","isRGB","startsWith","isHex","Error","shadeColor","amount","convertedColor","colorHex","replace","colorHexInt","main","justifyContent","image","backgroundPosition","headlineContainer","scrollInformation","bottom","HeaderSection","useInView","threshold","inView","useEffect","clipPath","lines","MeImage","src","meImage","alt","triangle","one","two","Triangles","container","lineHeight","triangles","AboutMeSection","value1","value2","value3","value4","calculate","filter","join","dark","contrastColor","contrastPrimary","headlineText","headlineBackgroundText","timelineContainer","timeline","timelineDot","timelineLine","timelineContent","TimelineSection","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAe,MAA0B,oC,eCI5BA,EAA6B,SAACC,EAAaC,GACpD,IAAKA,EACD,OAAOD,EAGX,IAAME,EAAe,eAAQF,GAE7B,IAAK,IAAMG,KAAQF,EACfC,EAAgBC,GAAQA,KAAQD,EAAR,UAA6BA,EAAgBC,GAA7C,YAAsDF,EAAkBE,IAAUF,EAAkBE,GAGhI,OAAOD,G,OCPLE,EAAYC,YACd,CACIC,KAAM,CACFC,SAAU,WACVC,SAAU,SACVC,UAAW,QACXC,MAAO,SAGf,CAAEP,KAAM,YASCQ,EAAUC,sBAAyC,SAACC,EAAOC,GAAS,IACrEC,EAA4DF,EAA5DE,SAAUC,EAAkDH,EAAlDG,UAAoBC,EAA8BJ,EAAvCK,QAAyBC,EADsB,YACRN,EADQ,oCAEtEK,EAAUnB,EAAaK,EAAUS,GAAQI,GAE/C,OACI,6CAAKD,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAOQ,IAAKA,GAASK,GAA7D,aACKJ,QC1BPX,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFgB,WAAW,mBAAD,OAAqBD,EAAME,QAAQC,QAAQC,MAA3C,8BACVC,eAAgB,WAChBC,OAAQ,OACRjB,MAAO,WAGf,CAAEP,KAAM,yBAOCyB,EAAuB,SAACf,GAAuB,IAChDG,EAAcH,EAAdG,UACFE,EAAUd,EAAUS,GAE1B,OAAO,qBAAKG,UAAWI,YAAKJ,EAAWE,EAAQZ,SAGnDsB,EAAqBC,YAAc,uB,YCnB7BzB,EAAYC,YACd,CACIC,KAAM,CACFwB,QAAS,OACTC,cAAe,SACf,UAAW,CACPrB,MAAO,OAEX,0BAA2B,CACvBsB,UAAW,WACXC,YAAa,MAEjB,0BAA2B,CACvBD,UAAW,aACXE,WAAY,OAGpBC,IAAK,GACLC,KAAM,GACNC,QAAS,IAEb,CAAElC,KAAM,aAQCmC,EAAW,SAACzB,GAA0B,IACvCG,EAA4DH,EAA5DG,UAAoBC,EAAwCJ,EAAjDK,QAAsBH,EAA2BF,EAA3BE,SAAaI,EADR,YACsBN,EADtB,oCAExCK,EAAUnB,EAAaK,EAAUS,GAAQI,GAE/C,OACI,6CAAKD,UAAWI,YAAKJ,EAAWE,EAAQZ,OAAWa,GAAnD,aACKoB,IAAMC,SAASC,IAAI1B,GAAU,SAAC2B,EAAOC,GAClC,OACI,cAAC,IAAD,CAAMC,SAAU,IAAKC,UAAWF,EAAQ,EAAI,OAAS,QAArD,SACKJ,IAAMO,aAAaJ,EAAO,CACvBK,UAAWJ,EAAQ,EAAI,OAAS,QAChCzB,QAAS,CACLiB,IAAKjB,EAAQiB,IACbC,KAAMlB,EAAQkB,KACdC,QAASnB,EAAQmB,oB,OC7C3CjC,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACF0C,WAAY,SACZC,OAAQ,EACRC,MAAO,gBAAGA,EAAH,EAAGA,MAAH,MAA0B,YAAVA,EAAsB,UAAY7B,EAAME,QAAQ4B,KAAKD,GAAS,aAEzFE,YAAa,CACTC,SAAU,IACVC,cAAe,IAEnBC,eAAgB,CACZF,SAAU,GACVC,cAAe,IAEnB9B,QAAS,CACL6B,SAAU,IAEdG,UAAW,CACPH,SAAU,IAEdI,OAAQ,CACJC,WAAY,aAGpB,CAAEvD,KAAM,eAcNwD,EAAuD,CACzDP,YAAa,KACbG,eAAgB,KAChB/B,QAAS,OACTgC,UAAW,QAGFI,EAAa,SAAC/C,GAA4B,IAC3CG,EAAsGH,EAAtGG,UAAoBC,EAAkFJ,EAA3FK,QAAsBH,EAAqEF,EAArEE,SADS,EAC4DF,EAA3DgD,eADD,MACW,UADX,IAC4DhD,EAAtC4C,cADtB,WAC4D5C,EAAtBqC,aADtC,MAC8C,UAD9C,EAE5ChC,EAAUnB,EAAaK,EAAU,2BAAKS,GAAN,IAAaqC,WAAUjC,GAEvD6C,EAAYH,EAAiBE,GACnC,OACI,cAACC,EAAD,CACI9C,UAAWI,YAAKJ,EAAWE,EAAQZ,KAAMY,EAAQ2C,GAAlC,eACV3C,EAAQuC,OAASA,IAF1B,SAKK1C,KCxDPX,EAAYC,YACd,CACIC,KAAM,CACFC,SAAU,WACVwD,cAAe,YACfC,UAAW,UAEfb,KAAM,CACF5C,SAAU,WACV0D,OAAQ,GAEZC,eAAgB,CACZ3D,SAAU,WACVG,MAAO,QACPiB,OAAQ,OACRsB,OAAQ,EACRkB,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXhB,SAAU,IACVY,OAAQ,IAGhB,CAAE9D,KAAM,yBAQCmE,EAAuB,SAACzD,GAAsC,IAC/DE,EAAuDF,EAAvDE,SAAUC,EAA6CH,EAA7CG,UAAoBC,EAAyBJ,EAAlCK,QAAsB2C,EAAYhD,EAAZgD,QAC7C3C,EAAUnB,EAAaK,EAAUS,GAAQI,GAE/C,OACI,sBAAKD,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAxC,UACI,cAAC,EAAD,CAAYuD,QAASA,EAAS7C,UAAWE,EAAQiC,KAAjD,SACKpC,IAEL,cAAC,EAAD,CAAY0C,QAAM,EAACzC,UAAWE,EAAQgD,eAAgBL,QAASA,EAASX,MAAM,iBAA9E,SACKnC,QCzCXX,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,kBAAoB,CACtBwB,QAAS,OACTC,cAA6B,SAF3B,EAAGgB,UAEiC,cAAgB,QAE1DwB,SAAU,CACN,UAAW,CACPzC,QAAS,SAGjB0C,cAAe,CACX1C,QAAS,OACTC,cAAe,SACf0C,WAAY,UAEhBpC,QAAS,gBAAGU,EAAH,EAAGA,UAAWG,EAAd,EAAcA,MAAd,MAA2B,CAChCwB,UAAW,EACXC,aAActD,EAAMuD,QAAQ,GAC5B1C,WAA0B,UAAda,EAAwB1B,EAAMuD,QAAQ,QAAKC,EACvD5C,YAA2B,SAAdc,EAAuB1B,EAAMuD,QAAQ,QAAKC,EACvD/C,QAAS,OACTC,cAAe,SACfiC,UAAW,UACXc,gBAAiBzD,EAAME,QAAQC,QAAQ0B,GAAS,QAChD6B,QAAS1D,EAAMuD,QAAQ,GACvBI,SAAU,MAEd7C,IAAK,gBAAGe,EAAH,EAAGA,MAAH,MAAgB,CACjBvB,OAAQ,GACRjB,MAAO,GACPoE,gBAAiBzD,EAAME,QAAQC,QAAQ0B,GAAS,QAChD+B,aAAc,QAElB7C,KAAM,gBAAGc,EAAH,EAAGA,MAAH,MAAgB,CAClB4B,gBAAiBzD,EAAME,QAAQC,QAAQ0B,GAAS,QAChDgC,KAAM,EACNxE,MAAO,IAEXyE,SAAU,cAAGpC,UAAH,MAAoB,CAC1BO,cAAe,EACfqB,aAActD,EAAMuD,QAAQ,QAGpC,CAAEzE,KAAM,iBAWCiF,EAAqD,SAACvE,GAAW,IAClEG,EAA6HH,EAA7HG,UAAoBC,EAAyGJ,EAAlHK,QAAsBH,EAA4FF,EAA5FE,SADgC,EAC4DF,EAAlFkC,iBADsB,MACV,QADU,IAC4DlC,EAA7DqC,aADC,MACO,OADP,IAC4DrC,EAA7C0D,gBADf,SACiCY,EAA2BtE,EAA3BsE,SAAahE,EAD9C,YAC4DN,EAD5D,8EAEnEK,EAAUnB,EAAaK,EAAU,2BAAKS,GAAN,IAAakC,YAAWG,WAAUjC,GAExE,OACI,8CACID,UAAWI,YAAKJ,EAAWE,EAAQZ,KAApB,eACVY,EAAQqD,SAAWA,KAEpBpD,GAJR,cAMI,sBAAKH,UAAWE,EAAQsD,cAAxB,UACI,qBAAKxD,UAAWE,EAAQiB,MACxB,qBAAKnB,UAAWE,EAAQkB,UAE5B,sBAAKpB,UAAWE,EAAQmB,QAAxB,UACK8C,GACG,cAAC,EAAD,CAAYnE,UAAWE,EAAQiE,SAAUtB,QAAQ,YAAjD,SACKsB,IAGRpE,U,QC9EXsE,EAA0BC,wBAA2C,IAY9DC,EAAqD,SAAC1E,GAAW,IAClEE,EAAaF,EAAbE,SACFyE,EAZO,WACb,IAAMnE,EAAQoE,cADK,EAEOC,mBAAiBrE,EAAME,QAAQoE,OAAOC,OAF7C,mBAInB,MAAO,CACH1C,MALe,KAMf2C,SANe,MAYLC,GAEd,OAAO,cAACT,EAAwBU,SAAzB,CAAkCC,MAAOR,EAAzC,SAAiDzE,KAG/CkF,EAA6B,WACtC,OAAOC,qBAAWb,ICdhBjF,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFwB,QAAS,OACT2C,WAAY,SACZ1C,cAAe,SACfoE,cAAe,OACf,yBAA0B,CACtBxB,aAActD,EAAMuD,QAAQ,KAGpCwB,KAAM,CACF1F,MAAO,EACPiB,OAAQ,EACRsD,aAAc,MACdH,gBAAiB,qBAAG5B,OACpBmD,WAAY,oBAEhBC,OAAQ,CACJ5F,MAAO,GACPiB,OAAQ,OAGhB,CAAExB,KAAM,qBASCoG,EAAmB,SAAC1F,GAAkC,IACvDG,EAAuEH,EAAvEG,UAAoBC,EAAmDJ,EAA5DK,QAAsBsF,EAAsC3F,EAAtC2F,cAAeC,EAAuB5F,EAAvB4F,mBAEhDvD,EAAU+C,IAAV/C,MACFhC,EAAUnB,EAAaK,EAAU,2BAAKS,GAAN,IAAaqC,WAAUjC,GAE7D,OACI,oBAAID,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAvC,SACK,IAAIoG,MAAMF,GAAeG,MAAK,GAAMlE,KAAI,SAACmE,EAAGjE,GAAJ,OACrC,oBAEI3B,UAAWI,YAAKF,EAAQkF,KAAT,eACVlF,EAAQoF,OAAS3D,IAAU8D,KAF3B9D,SC/CnBvC,EAAYC,YACd,CACIC,KAAM,CACFqB,OAAQ,QACRnB,SAAU,SAGlB,CAAEL,KAAM,yBAWC0G,EAAqE,SAAChG,GAAW,IAClFE,EAAyFF,EAAzFE,SAAUC,EAA+EH,EAA/EG,UAAoBC,EAA2DJ,EAApEK,QAAsB4F,EAA8CjG,EAA9CiG,aAAcN,EAAgC3F,EAAhC2F,cAAeO,EAAiBlG,EAAjBkG,aAC1E7F,EAAUnB,EAAaK,EAAUS,GAAQI,GACzC+F,EAAUC,iBAAuB,MAgCvC,OACI,qBAAKjG,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAOQ,IAAKkG,EAASE,QA/B7C,SAACC,GAAuC,IAChDC,EAAYJ,EAAZI,QACR,GAAKA,EAAL,CAKA,IAAMC,EAAWF,EAAMG,OAAS,EAC1BC,GAAcF,EAEdG,EAAuC,IAAtBJ,EAAQK,UACzBC,EAAoBN,EAAQO,aAAeP,EAAQQ,eAAiBR,EAAQK,UAGlF,GAAIJ,GAAYG,EAAgB,CAC5B,GAAqB,IAAjBV,EACA,OAEJC,EAAaD,EAAe,GAIhC,GAAIS,GAAcG,EAAmB,CACjC,GAAIZ,IAAiBN,EAAgB,EACjC,OAEJO,EAAaD,EAAe,MAKhC,SACK/F,KCpDPX,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFC,SAAU,YAEd8B,QAAS,CACLV,OAAQ,QACR0E,WAAY,2BAEhBwB,iBAAkB,CACdtH,SAAU,WACVuH,MAAOzG,EAAMuD,QAAQ,GACrBT,IAAK,UAGb,CAAEhE,KAAM,qBASC4H,EAAmB,SAAClH,GAAkC,IACvDE,EAA8CF,EAA9CE,SAAUC,EAAoCH,EAApCG,UAAoBC,EAAgBJ,EAAzBK,QACvBA,EAAUnB,EAAaK,EAAUS,GAAQI,GAFe,EAIxByE,mBAAiB,GAJO,mBAIvDsC,EAJuD,KAI1CC,EAJ0C,KAKxDzB,EAAgBhE,WAAS0F,MAAMnH,GAErC,OACI,cAAC,EAAD,UACI,sBAAKC,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAxC,UACI,qBAAKU,UAAWE,EAAQmB,QAAS8F,MAAO,CAAE9D,UAAU,mBAAD,OAAmC,IAAd2D,EAArB,UAAnD,SACKxF,WAASC,IAAI1B,GAAU,SAAC2B,EAAOC,GAAR,OACpB,cAAC,EAAD,CAAkCmE,aAAcnE,EAAO6D,cAAeA,EAAeO,aAAckB,EAAnG,SACK1F,IAAMO,aAAaJ,IADGC,QAKnC,cAAC,EAAD,CAAkB3B,UAAWE,EAAQ2G,iBAAkBpB,mBAAoBuB,EAAaxB,cAAeA,U,QCpDhH,SAAS4B,EAASC,GASrB,MAAO,CAAEC,IAJGC,SAASF,EAAIG,MAAM,EAAG,GAAI,IAIxBC,MAHAF,SAASF,EAAIG,MAAM,EAAG,GAAI,IAGnBE,KAFRH,SAASF,EAAIG,MAAM,EAAG,GAAI,KAKpC,SAASG,EAASC,GACrB,IACMC,EADQ,6CACQC,KAAKF,GAC3B,GAAIC,EAAS,CACT,IAAMP,EAAMS,OAAOF,EAAQ,IACrBJ,EAAQM,OAAOF,EAAQ,IACvBH,EAAOK,OAAOF,EAAQ,IAE5B,MAAM,IAAN,QAAY,UADAH,EAAQD,GAAS,EAAMH,GAAO,KACbU,SAAS,IAAIR,MAAM,KAIjD,SAASS,EAASC,EAAkBC,GACvC,IAAMC,EAAQF,EAASG,WAAW,OAC5BC,EAAQJ,EAASG,WAAW,KAClC,IAAKD,IAAUE,EACX,MAAM,IAAIC,MAAM,8BAGpB,GAAIH,EAAO,CACP,IAAMf,EAAMM,EAASO,GACrB,IAAKb,EACD,MAAM,IAAIkB,MAAM,iCAHb,MAMsBnB,EAASC,GAA9BC,EAND,EAMCA,IAAKG,EANN,EAMMA,MAAOC,EANb,EAMaA,KACpB,MAAM,QAAN,OAAeJ,EAAf,aAAuBG,EAAvB,aAAiCC,EAAjC,aAA0CS,EAA1C,KAd0D,MAiBjCf,EAASc,GAA9BZ,EAjBsD,EAiBtDA,IAAKG,EAjBiD,EAiBjDA,MAAOC,EAjB0C,EAiB1CA,KACpB,MAAM,QAAN,OAAeJ,EAAf,aAAuBG,EAAvB,aAAiCC,EAAjC,aAA0CS,EAA1C,KAWG,SAASK,EAAWN,EAAkBO,GACzC,IAAML,EAAQF,EAASG,WAAW,OAC5BC,EAAQJ,EAASG,WAAW,KAClC,IAAKD,IAAUE,EACX,MAAM,IAAIC,MAAM,8BAGpB,IAAMG,EAAiBN,EAAQT,EAASO,GAAYA,EACpD,IAAKQ,EACD,MAAM,IAAIH,MAAM,4BAGpB,IAAMI,EAAWD,EAAeE,QAAQ,IAAK,IACvCC,EAActB,SAASoB,EAAU,IAEnCrB,GAAOuB,GAAe,IAAMJ,EAC5BnB,EAAM,IACNA,EAAM,IACCA,EAAM,IACbA,EAAM,GAGV,IAAII,GAASmB,GAAe,EAAK,KAAUJ,EACvCf,EAAO,IACPA,EAAO,IACAA,EAAO,IACdA,EAAO,GAGX,IAAID,GAAuB,IAAdoB,GAA0BJ,EAOvC,OANIhB,EAAQ,IACRA,EAAQ,IACDA,EAAQ,IACfA,EAAQ,GAGN,IAAN,QAAYA,EAASC,GAAQ,EAAMJ,GAAO,IAAKU,SAAS,K,WC5EtD5I,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFgB,WAAW,2BAAD,OAA6BD,EAAME,QAAQC,QAAQsI,KAAnD,iCACVhI,QAAS,OACTC,cAAe,SACf0C,WAAY,SACZsF,eAAgB,SAChB,WAAY,CACRpI,OAAQ,OACRjB,MAAO,OACP2B,QAAS,KACT9B,SAAU,QACVe,WAAW,OAAD,OAAS0I,EAAT,KACVC,mBAAoB,SACpBvI,eAAgB,OAChBuC,QAAS,EACToC,WAAY,iCAGpB6D,kBAAmB,CACflG,UAAW,SACXlC,QAAS,OACTC,cAAe,SACf0C,WAAY,SACZsF,eAAgB,SAChBrJ,MAAO,OACPwC,MAAO,wBACPa,cAAe,aAEnBoB,SAAU,CACNlC,OAAQ,GAEZkH,kBAAmB,CACf5J,SAAU,WACV6J,OAAQ/I,EAAMuD,QAAQ,GACtB9C,QAAS,OACTC,cAAe,SACfiC,UAAW,SACXd,MAAO+F,EAAS5H,EAAME,QAAQoE,OAAOC,MAAO,IAC5CnB,WAAY,SACZV,cAAe,YACf,UAAW,CACPY,aAActD,EAAMuD,QAAQ,GAC5BvB,SAAU,YAItB,CAAElD,KAAM,kBAOCkK,EAAgB,SAACxJ,GAAwB,IAC1CG,EAAcH,EAAdG,UACFE,EAAUd,EAAUS,GAEpBQ,EAAQoE,cACNI,EAAaI,IAAbJ,SALyC,EAOzByE,YAAU,CAAEC,UAAW,KAAvCzJ,EAPyC,EAOzCA,IAAK0J,EAPoC,EAOpCA,OAQb,OANAC,qBAAU,WACFD,GACA3E,EAASxE,EAAME,QAAQoE,OAAOC,SAEnC,CAACvE,EAAOmJ,EAAQ3E,IAGf,eAAClF,EAAD,CAASK,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAOQ,IAAKA,EAAxD,UACI,cAAC,IAAD,CAAM8B,SAAU,IAAhB,SACI,sBAAK5B,UAAWE,EAAQgJ,kBAAxB,UACI,cAAC,EAAD,CAAYlJ,UAAWE,EAAQiE,SAAUtB,QAAQ,cAAcX,MAAM,kBAArE,yBAGA,cAAC,EAAD,CAAYW,QAAQ,iBAAiBX,MAAM,kBAA3C,6CAKR,sBAAKlC,UAAWE,EAAQiJ,kBAAxB,UACI,cAAC,IAAD,IACA,cAAC,EAAD,CAAYjH,MAAM,UAAUW,QAAQ,YAApC,sCCjGD,MAA0B,+BCQnCzD,EAAYC,YACd,CACIC,KAAM,CACFC,SAAU,WACVC,SAAU,SACVE,MAAO,IACPiB,OAAQ,KAEZqI,MAAO,CACHtJ,MAAO,UACPiB,OAAQ,UACR+I,SAAU,2CACVnK,SAAU,WACV0D,OAAQ,GAEZ0G,MAAO,CACHjK,MAAO,oBACPH,SAAU,WACV6J,OAAQ,KAGhB,CAAEjK,KAAM,YAOCyK,EAAU,SAAC/J,GAAyB,IACrCG,EAAcH,EAAdG,UACFE,EAAUd,EAAUS,GAE1B,OACI,sBAAKG,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAxC,UACI,qBAAKU,UAAWE,EAAQ8I,MAAOa,IAAKC,EAASC,IAAI,gBACjD,cAAC,EAAD,CAAsB/J,UAAWE,EAAQyJ,YCnC/CvK,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFC,SAAU,WACVoB,OAAQ,QAEZqJ,SAAU,CACNtK,MAAO,QACPiB,OAAQ,OACRpB,SAAU,YAEd0K,IAAK,CACDnG,gBAAiBzD,EAAME,QAAQC,QAAQC,MACvC4C,UAAW,gBAEf6G,IAAK,CACDpG,gBAAiBzD,EAAME,QAAQC,QAAQsI,KACvCzF,UAAW,oBAGnB,CAAElE,KAAM,cAQCgL,EAAY,SAACtK,GAA2B,IACzCG,EAAoCH,EAApCG,UAAoBC,EAAgBJ,EAAzBK,QACbA,EAAUnB,EAAaK,EAAUS,GAAQI,GAE/C,OACI,sBAAKD,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAxC,UACI,qBAAKU,UAAWI,YAAKF,EAAQ+J,IAAK/J,EAAQ8J,YAC1C,qBAAKhK,UAAWI,YAAKF,EAAQgK,IAAKhK,EAAQ8J,gBChChD5K,EAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFwE,gBAAiB,QACjBC,QAAS1D,EAAMuD,QAAQ,IAE3BwG,UAAW,CACPtJ,QAAS,OACTkD,SAAU,KACV/B,OAAQ,YAEZ6H,QAAS,CACL7I,YAAaZ,EAAMuD,QAAQ,IAE/BzB,KAAM,CACFa,UAAW,UACXqH,WAAY,OACZpH,OAAQ,EACRiB,KAAM,OAEVoG,UAAW,CACP/K,SAAU,WACV6J,OAAQ,EACRhG,KAAM,YAGd,CAAEjE,KAAM,mBAOCoL,EAAiB,SAAC1K,GAAgC,IACnDG,EAAcH,EAAdG,UACFE,EAAUd,EAAUS,GAEpBQ,EAAQoE,cACNI,EAAaI,IAAbJ,SALkD,EAOlCyE,YAAU,CAAEC,UAAW,KAAvCzJ,EAPkD,EAOlDA,IAAK0J,EAP6C,EAO7CA,OAQb,OANAC,qBAAU,WACFD,GACA3E,EAASxE,EAAME,QAAQC,QAAQsI,QAEpC,CAACzI,EAAOmJ,EAAQ3E,IAGf,eAAClF,EAAD,CAASK,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAOQ,IAAKA,EAAxD,UACI,cAAC,EAAD,CAAsB+C,QAAQ,cAA9B,0BACA,sBAAK7C,UAAWE,EAAQkK,UAAxB,UACI,cAAC,IAAD,CAAMvI,UAAU,OAAhB,SACI,cAAC,EAAD,CAAS7B,UAAWE,EAAQ4J,YAEhC,cAAC,IAAD,CAAMjI,UAAU,KAAhB,SACI,cAAC,EAAD,CAAY7B,UAAWE,EAAQiC,KAAMD,MAAM,YAA3C,6xCAeR,cAAC,EAAD,CAAWlC,UAAWE,EAAQoK,gBCjD7BjK,GAAe,CACxBuD,QAXY,SAAC4G,EAAgBC,EAAiBC,EAAiBC,GAC/D,IAAMC,EAAY,SAAC5F,GAAD,MAAsC,qBAAVA,EAAwB,EAAIA,OAAQnB,GAGlF,MAFiB,CAAC+G,EAAUJ,GAASI,EAAUH,GAASG,EAAUF,GAASE,EAAUD,IAGhFE,QAAO,SAACjH,GAAD,MAAgC,qBAAZA,KAC3BnC,KAAI,SAACmC,GAAD,gBAAgBA,EAAhB,SACJkH,KAAK,MAKVvK,QAAS,CACLoE,OAAQ,CACJC,MAAO,WAEXpE,QAAS,CACLsI,KAAM,UACNiC,KAAM,UACNtK,MAAO,UACPuK,cAAe,WAEnB7I,KAAM,CACF3B,QAAS,UACTgC,UAAW,OACXyI,gBAAiB,wBACjB/H,eAAgB,aC/BtB9D,GAAYC,aACd,SAACgB,GAAD,MAAY,CACRf,KAAM,CACFwE,gBAAiBzD,EAAME,QAAQC,QAAQsI,KACvC/E,QAAS1D,EAAMuD,QAAQ,IAE3BsH,aAAc,CACVhJ,MAAO7B,EAAME,QAAQoE,OAAOC,OAEhCuG,uBAAwB,CACpBjJ,MAAOsG,EAAWnI,EAAME,QAAQC,QAAQsI,KAAM,IAElDsC,kBAAmB,CACf1H,UAAW,OACXK,QAAS1D,EAAMuD,QAAQ,IAE3ByH,SAAU,GACVC,YAAa,CACTxH,gBAAiBzD,EAAME,QAAQoE,OAAOC,OAE1C2G,aAAc,CACVzH,gBAAiBzD,EAAME,QAAQC,QAAQC,OAE3C+K,gBAAiB,CACb1H,gBAAiBzD,EAAME,QAAQoE,OAAOC,UAG9C,CAAEzF,KAAM,oBAOCsM,GAAkB,SAAC5L,GAAiC,IACrDG,EAAcH,EAAdG,UACFE,EAAUd,GAAUS,GAEpBQ,EAAQoE,cACNI,EAAaI,IAAbJ,SALoD,EAOpCyE,YAAU,CAAEC,UAAW,KAAvCzJ,EAPoD,EAOpDA,IAAK0J,EAP+C,EAO/CA,OAQb,OANAC,qBAAU,WACFD,GACA3E,EAASxE,EAAME,QAAQoE,OAAOC,SAEnC,CAACvE,EAAOmJ,EAAQ3E,IAGf,eAAClF,EAAD,CAASK,UAAWI,YAAKJ,EAAWE,EAAQZ,MAAOQ,IAAKA,EAAxD,UACI,cAAC,EAAD,CACII,QAAS,CACLiC,KAAMjC,EAAQgL,aACdhI,eAAgBhD,EAAQiL,wBAE5BtI,QAAQ,cALZ,wBASA,qBAAK7C,UAAWE,EAAQkL,kBAAxB,SACI,eAAC,EAAD,CACIpL,UAAWE,EAAQmL,SACnBnL,QAAS,CACLiB,IAAKjB,EAAQoL,YACblK,KAAMlB,EAAQqL,aACdlK,QAASnB,EAAQsL,iBALzB,UAQI,eAAC,EAAD,CAAcrH,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,+PAKA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,eAAC,EAAD,CAAcA,SAAS,cAAvB,UACI,cAAC,EAAD,2EACA,cAAC,EAAD,+BAEJ,cAAC,EAAD,CAAcZ,UAAQ,EAACY,SAAS,cAAhC,SACI,cAAC,EAAD,0CC5GTuH,OAZf,WACI,OACI,cAAC,IAAD,CAAerL,MAAOA,GAAtB,SACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,U,MCRhBsL,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a6e233d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/node-js.04e483b5.jpg\";","import type { Classes } from 'jss';\n\ntype MergeClasses = (classes1: Classes, classes2?: Classes) => Classes;\n\nexport const mergeClasses: MergeClasses = (baseClasses, additionalClasses) => {\n    if (!additionalClasses) {\n        return baseClasses;\n    }\n\n    const combinedClasses = { ...baseClasses };\n\n    for (const name in additionalClasses) {\n        combinedClasses[name] = name in combinedClasses ? `${combinedClasses[name]} ${additionalClasses[name]}` : additionalClasses[name];\n    }\n\n    return combinedClasses;\n};\n","import React, { forwardRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport { Theme } from '../../tools/theme/theme';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\n\ntype ClassKey = 'root';\nconst useStyles = createUseStyles<ClassKey, SectionProps, Theme>(\n    {\n        root: {\n            position: 'relative',\n            overflow: 'hidden',\n            minHeight: '100vh',\n            width: '100%',\n        },\n    },\n    { name: 'Section' }\n);\n\nexport interface SectionProps {\n    classes?: ClassesOverride<ClassKey>;\n    className?: string;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport const Section = forwardRef<HTMLDivElement, SectionProps>((props, ref) => {\n    const { children, className, classes: classesProp, ...restProps } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n\n    return (\n        <div className={clsx(className, classes.root)} ref={ref} {...restProps}>\n            {children}\n        </div>\n    );\n});\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\n\ntype ClassKeys = 'root';\nconst useStyles = createUseStyles<ClassKeys, LinesProps, Theme>(\n    (theme) => ({\n        root: {\n            background: `linear-gradient(${theme.palette.primary.light} .05em, transparent .05em)`,\n            backgroundSize: '100% 5px',\n            height: '100%',\n            width: '100%',\n        },\n    }),\n    { name: 'LinesDesignHighlight' }\n);\n\nexport interface LinesProps {\n    className?: string;\n}\n\nexport const LinesDesignHighlight = (props: LinesProps) => {\n    const { className } = props;\n    const classes = useStyles(props);\n\n    return <div className={clsx(className, classes.root)} />;\n};\n\nLinesDesignHighlight.displayName = 'LinesDesignHighlight';\n","import React, { HTMLAttributes } from 'react';\nimport { TimelineItemProps } from './TimelineItem';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport { Theme } from '../../tools/theme/theme';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport { Fade } from 'react-awesome-reveal';\n\ntype ClassKey = 'root' | 'dot' | 'line' | 'content';\nconst useStyles = createUseStyles<ClassKey, TimelineProps, Theme>(\n    {\n        root: {\n            display: 'flex',\n            flexDirection: 'column',\n            '& > div': {\n                width: '50%',\n            },\n            '& > div:nth-child(2n+1)': {\n                alignSelf: 'flex-end',\n                marginRight: 12.5,\n            },\n            '& > div:nth-child(2n+2)': {\n                alignSelf: 'flex-start',\n                marginLeft: 12.5,\n            },\n        },\n        dot: {},\n        line: {},\n        content: {},\n    },\n    { name: 'Timeline' }\n);\n\nexport interface TimelineProps extends HTMLAttributes<HTMLDivElement> {\n    classes?: ClassesOverride<ClassKey>;\n    children: React.ReactElement<TimelineItemProps, 'Timeline'> | React.ReactElement<TimelineItemProps, 'Timeline'>[];\n}\n\nexport const Timeline = (props: TimelineProps) => {\n    const { className, classes: classesProp, children, ...restProps } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n\n    return (\n        <div className={clsx(className, classes.root)} {...restProps}>\n            {React.Children.map(children, (child, index) => {\n                return (\n                    <Fade duration={700} direction={index % 2 ? 'left' : 'right'}>\n                        {React.cloneElement(child, {\n                            alignment: index % 2 ? 'left' : 'right',\n                            classes: {\n                                dot: classes.dot,\n                                line: classes.line,\n                                content: classes.content,\n                            },\n                        })}\n                    </Fade>\n                );\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport clsx from 'clsx';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\n\ntype ClassKeys = 'root' | 'noWrap' | Variant;\nconst useStyles = createUseStyles<ClassKeys, TypographyProps, Theme>(\n    (theme) => ({\n        root: {\n            fontFamily: 'DINPro',\n            margin: 0,\n            color: ({ color }) => (color === 'inherit' ? 'inherit' : theme.palette.text[color || 'primary']),\n        },\n        headlineBig: {\n            fontSize: 140,\n            letterSpacing: 24,\n        },\n        subHeadlineBig: {\n            fontSize: 30,\n            letterSpacing: 14,\n        },\n        primary: {\n            fontSize: 20,\n        },\n        secondary: {\n            fontSize: 14,\n        },\n        noWrap: {\n            whiteSpace: 'nowrap',\n        },\n    }),\n    { name: 'Typography' }\n);\n\ntype Variant = 'headlineBig' | 'subHeadlineBig' | 'primary' | 'secondary';\n\nexport interface TypographyProps {\n    classes?: ClassesOverride<ClassKeys>;\n    className?: string;\n    children: string;\n    variant?: Variant;\n    color?: keyof Theme['palette']['text'] | 'inherit';\n    noWrap?: boolean;\n}\n\nconst componentMapping: Record<Variant, React.ElementType> = {\n    headlineBig: 'h1',\n    subHeadlineBig: 'h4',\n    primary: 'span',\n    secondary: 'span',\n};\n\nexport const Typography = (props: TypographyProps) => {\n    const { className, classes: classesProp, children, variant = 'primary', noWrap = false, color = 'primary' } = props;\n    const classes = mergeClasses(useStyles({ ...props, color }), classesProp);\n\n    const Component = componentMapping[variant];\n    return (\n        <Component\n            className={clsx(className, classes.root, classes[variant], {\n                [classes.noWrap]: noWrap,\n            })}\n        >\n            {children}\n        </Component>\n    );\n};\n","import React from 'react';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport { Typography, TypographyProps } from './Typography';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport clsx from 'clsx';\n\ntype ClassKeys = 'root' | 'backgroundText' | 'text';\nconst useStyles = createUseStyles<ClassKeys, BackgroundTypographyProps, Theme>(\n    {\n        root: {\n            position: 'relative',\n            textTransform: 'uppercase',\n            textAlign: 'center',\n        },\n        text: {\n            position: 'relative',\n            zIndex: 1,\n        },\n        backgroundText: {\n            position: 'absolute',\n            width: '500vw',\n            height: '120%',\n            margin: 0,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            fontSize: 300,\n            zIndex: 0,\n        },\n    },\n    { name: 'BackgroundTypography' }\n);\n\nexport interface BackgroundTypographyProps extends Omit<TypographyProps, 'classes'> {\n    className?: string;\n    classes?: ClassesOverride<ClassKeys>;\n}\n\nexport const BackgroundTypography = (props: BackgroundTypographyProps) => {\n    const { children, className, classes: classesProp, variant } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n\n    return (\n        <div className={clsx(className, classes.root)}>\n            <Typography variant={variant} className={classes.text}>\n                {children}\n            </Typography>\n            <Typography noWrap className={classes.backgroundText} variant={variant} color='backgroundText'>\n                {children}\n            </Typography>\n        </div>\n    );\n};\n","import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport { Theme } from '../../tools/theme/theme';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport { Typography } from '../Typography';\n\ntype ClassKeys = 'root' | 'content' | 'lineContainer' | 'dot' | 'line' | 'lastItem' | 'headline';\nconst useStyles = createUseStyles<ClassKeys, TimelineItemProps, Theme>(\n    (theme) => ({\n        root: ({ alignment }) => ({\n            display: 'flex',\n            flexDirection: alignment === 'left' ? 'row-reverse' : 'row',\n        }),\n        lastItem: {\n            '& $line': {\n                display: 'none',\n            },\n        },\n        lineContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        content: ({ alignment, color }) => ({\n            marginTop: 5,\n            marginBottom: theme.spacing(2),\n            marginLeft: alignment === 'right' ? theme.spacing(2) : undefined,\n            marginRight: alignment === 'left' ? theme.spacing(2) : undefined,\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'justify',\n            backgroundColor: theme.palette.primary[color || 'main'],\n            padding: theme.spacing(2),\n            maxWidth: 600,\n        }),\n        dot: ({ color }) => ({\n            height: 25,\n            width: 25,\n            backgroundColor: theme.palette.primary[color || 'main'],\n            borderRadius: '50%',\n        }),\n        line: ({ color }) => ({\n            backgroundColor: theme.palette.primary[color || 'main'],\n            flex: 1,\n            width: 3,\n        }),\n        headline: ({ alignment }) => ({\n            letterSpacing: 2,\n            marginBottom: theme.spacing(1),\n        }),\n    }),\n    { name: 'TimelineItem' }\n);\n\nexport interface TimelineItemProps extends HTMLAttributes<HTMLDivElement> {\n    classes?: ClassesOverride<ClassKeys>;\n    alignment?: 'left' | 'right';\n    color?: keyof Theme['palette']['primary'];\n    lastItem?: boolean;\n    headline?: string;\n}\n\nexport const TimelineItem: FunctionComponent<TimelineItemProps> = (props) => {\n    const { className, classes: classesProp, children, alignment = 'right', color = 'main', lastItem = false, headline, ...restProps } = props;\n    const classes = mergeClasses(useStyles({ ...props, alignment, color }), classesProp);\n\n    return (\n        <div\n            className={clsx(className, classes.root, {\n                [classes.lastItem]: lastItem,\n            })}\n            {...restProps}\n        >\n            <div className={classes.lineContainer}>\n                <div className={classes.dot} />\n                <div className={classes.line} />\n            </div>\n            <div className={classes.content}>\n                {headline && (\n                    <Typography className={classes.headline} variant='secondary'>\n                        {headline}\n                    </Typography>\n                )}\n                {children}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { createContext, FunctionComponent, useContext, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\n\ntype SectionsScrollerContextType = ReturnType<typeof useStore>;\n\nconst SectionsScrollerContext = createContext<SectionsScrollerContextType>({} as any);\n\nconst useStore = () => {\n    const theme = useTheme<Theme>();\n    const [color, setColor] = useState<string>(theme.palette.common.white);\n\n    return {\n        color,\n        setColor,\n    };\n};\n\nexport const SectionsScrollerContextProvider: FunctionComponent = (props) => {\n    const { children } = props;\n    const store = useStore();\n\n    return <SectionsScrollerContext.Provider value={store}>{children}</SectionsScrollerContext.Provider>;\n};\n\nexport const useSectionsScrollerContext = () => {\n    return useContext(SectionsScrollerContext);\n};\n","import React, { HTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport { useSectionsScrollerContext } from './SectionsScrollerContext';\n\ninterface UseStylesParameters extends SectionIndicatorProps {\n    color: string;\n}\n\ntype ClassKeys = 'root' | 'item' | 'active';\nconst useStyles = createUseStyles<ClassKeys, UseStylesParameters, Theme>(\n    (theme) => ({\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'column',\n            listStyleType: 'none',\n            '& > *:not(:last-child)': {\n                marginBottom: theme.spacing(2),\n            },\n        },\n        item: {\n            width: 4,\n            height: 4,\n            borderRadius: '50%',\n            backgroundColor: ({ color }) => color,\n            transition: 'all .4s ease-out',\n        },\n        active: {\n            width: 12,\n            height: 12,\n        },\n    }),\n    { name: 'SectionIndicator' }\n);\n\nexport interface SectionIndicatorProps extends HTMLAttributes<HTMLUListElement> {\n    classes?: ClassesOverride<ClassKeys>;\n    sectionsCount: number;\n    activeSectionIndex: number;\n}\n\nexport const SectionIndicator = (props: SectionIndicatorProps) => {\n    const { className, classes: classesProp, sectionsCount, activeSectionIndex } = props;\n\n    const { color } = useSectionsScrollerContext();\n    const classes = mergeClasses(useStyles({ ...props, color }), classesProp);\n\n    return (\n        <ul className={clsx(className, classes.root)}>\n            {new Array(sectionsCount).fill(true).map((_, index) => (\n                <li\n                    key={index}\n                    className={clsx(classes.item, {\n                        [classes.active]: index === activeSectionIndex,\n                    })}\n                />\n            ))}\n        </ul>\n    );\n};\n","import React, { FunctionComponent, useRef, WheelEvent } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport clsx from 'clsx';\n\ntype ClassKeys = 'root';\nconst useStyles = createUseStyles<ClassKeys, SectionsScrollerItemProps, Theme>(\n    {\n        root: {\n            height: '100vh',\n            overflow: 'auto',\n        },\n    },\n    { name: 'SectionsScrollerItem' }\n);\n\nexport interface SectionsScrollerItemProps {\n    className?: string;\n    classes?: ClassesOverride<ClassKeys>;\n    sectionIndex: number;\n    sectionsCount: number;\n    onPageChange: (toIndex: number) => void;\n}\n\nexport const SectionsScrollerItem: FunctionComponent<SectionsScrollerItemProps> = (props) => {\n    const { children, className, classes: classesProp, sectionIndex, sectionsCount, onPageChange } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n    const rootRef = useRef<HTMLDivElement>(null);\n\n    const handleWheel = (event: WheelEvent<HTMLDivElement>) => {\n        const { current } = rootRef;\n        if (!current) {\n            return;\n        }\n\n        // scroll up is true, when deltaY is a negative number.\n        const scrollUp = event.deltaY < 0;\n        const scrollDown = !scrollUp;\n\n        const isScrollBarTop = current.scrollTop === 0;\n        const isScrollBarBottom = current.scrollHeight - current.clientHeight === current.scrollTop;\n\n        // Just scroll up when the user scrolled up and the actual scrollbar is placed on top\n        if (scrollUp && isScrollBarTop) {\n            if (sectionIndex === 0) {\n                return;\n            }\n            onPageChange(sectionIndex - 1);\n        }\n\n        // Just scroll down when the user scrolled down and the actual scrollbar is placed on bottom\n        if (scrollDown && isScrollBarBottom) {\n            if (sectionIndex === sectionsCount - 1) {\n                return;\n            }\n            onPageChange(sectionIndex + 1);\n        }\n    };\n\n    return (\n        <div className={clsx(className, classes.root)} ref={rootRef} onWheel={handleWheel}>\n            {children}\n        </div>\n    );\n};\n","import React, { Children, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport clsx from 'clsx';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\nimport { SectionIndicator } from './SectionIndicator';\nimport { SectionsScrollerContextProvider } from './SectionsScrollerContext';\nimport { SectionsScrollerItem } from './SectionsScrollerItem';\n\ntype ClassKeys = 'root' | 'content' | 'sectionIndicator';\nconst useStyles = createUseStyles<ClassKeys, SectionsScrollerProps, Theme>(\n    (theme) => ({\n        root: {\n            position: 'relative',\n        },\n        content: {\n            height: '100vh',\n            transition: 'transform 700ms ease 0s',\n        },\n        sectionIndicator: {\n            position: 'absolute',\n            right: theme.spacing(3),\n            top: '50%',\n        },\n    }),\n    { name: 'SectionsScroller' }\n);\n\nexport interface SectionsScrollerProps {\n    className?: string;\n    classes?: ClassesOverride<ClassKeys>;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport const SectionsScroller = (props: SectionsScrollerProps) => {\n    const { children, className, classes: classesProp } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n\n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const sectionsCount = Children.count(children);\n\n    return (\n        <SectionsScrollerContextProvider>\n            <div className={clsx(className, classes.root)}>\n                <div className={classes.content} style={{ transform: `translate3d(0, -${activeIndex * 100}vh, 0` }}>\n                    {Children.map(children, (child, index) => (\n                        <SectionsScrollerItem key={index} sectionIndex={index} sectionsCount={sectionsCount} onPageChange={setActiveIndex}>\n                            {React.cloneElement(child)}\n                        </SectionsScrollerItem>\n                    ))}\n                </div>\n                <SectionIndicator className={classes.sectionIndicator} activeSectionIndex={activeIndex} sectionsCount={sectionsCount} />\n            </div>\n        </SectionsScrollerContextProvider>\n    );\n};\n","export function hexToRGB(hex: string): {\n    red: number;\n    green: number;\n    blue: number;\n} {\n    const red = parseInt(hex.slice(1, 3), 16);\n    const green = parseInt(hex.slice(3, 5), 16);\n    const blue = parseInt(hex.slice(5, 7), 16);\n\n    return { red, green, blue };\n}\n\nexport function rgbToHex(rgbString: string): string | undefined {\n    const regex = /rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)/;\n    const matcher = regex.exec(rgbString);\n    if (matcher) {\n        const red = Number(matcher[1]);\n        const green = Number(matcher[2]);\n        const blue = Number(matcher[3]);\n        const rgb = blue | (green << 8) | (red << 16);\n        return `#${(0x1000000 + rgb).toString(16).slice(1)}`;\n    }\n}\n\nexport function addAlpha(hexOrRGB: string, alpha: number): string {\n    const isRGB = hexOrRGB.startsWith('rgb');\n    const isHex = hexOrRGB.startsWith('#');\n    if (!isRGB && !isHex) {\n        throw new Error('You used the method wrong!');\n    }\n\n    if (isRGB) {\n        const hex = rgbToHex(hexOrRGB);\n        if (!hex) {\n            throw new Error('Could not convert rgb to hex.');\n        }\n\n        const { red, green, blue } = hexToRGB(hex);\n        return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    }\n\n    const { red, green, blue } = hexToRGB(hexOrRGB);\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n}\n\n/**\n * Lighten or darken color\n *\n * This function takes the color and lighten or darken it with the given amount. The color can be a rgb or hex code color.\n * @param hexOrRGB\n * @param amount\n *  Use positive value to light the color, otherwise negative\n */\nexport function shadeColor(hexOrRGB: string, amount: number): string {\n    const isRGB = hexOrRGB.startsWith('rgb');\n    const isHex = hexOrRGB.startsWith('#');\n    if (!isRGB && !isHex) {\n        throw new Error('You used the method wrong!');\n    }\n\n    const convertedColor = isRGB ? rgbToHex(hexOrRGB) : hexOrRGB;\n    if (!convertedColor) {\n        throw new Error('Could not convert color.');\n    }\n\n    const colorHex = convertedColor.replace('#', '');\n    const colorHexInt = parseInt(colorHex, 16);\n\n    let red = (colorHexInt >> 16) + amount;\n    if (red > 255) {\n        red = 255;\n    } else if (red < 0) {\n        red = 0;\n    }\n\n    let blue = ((colorHexInt >> 8) & 0x00ff) + amount;\n    if (blue > 255) {\n        blue = 255;\n    } else if (blue < 0) {\n        blue = 0;\n    }\n\n    let green = (colorHexInt & 0x0000ff) + amount;\n    if (green > 255) {\n        green = 255;\n    } else if (green < 0) {\n        green = 0;\n    }\n\n    return `#${(green | (blue << 8) | (red << 16)).toString(16)}`;\n}\n","import React, { useEffect } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport clsx from 'clsx';\n\nimport image from './assets/node-js.jpg';\nimport { Section, Typography, useSectionsScrollerContext } from '../../components';\nimport { Theme } from '../../tools/theme/theme';\nimport { CgMouse } from 'react-icons/all';\nimport { addAlpha } from '../../tools/utils/ColorUtils';\nimport { useInView } from 'react-intersection-observer';\nimport { Fade } from 'react-awesome-reveal';\n\ntype ClassKey = 'root' | 'headlineContainer' | 'headline' | 'scrollInformation';\nconst useStyles = createUseStyles<ClassKey, HeaderProps, Theme>(\n    (theme) => ({\n        root: {\n            background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, rgba(51,51,51,0.2) 100%)`,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:before': {\n                height: '100%',\n                width: '100%',\n                content: '\"\"',\n                position: 'fixed',\n                background: `url(${image})`,\n                backgroundPosition: 'center',\n                backgroundSize: '120%',\n                zIndex: -1,\n                transition: 'background-size .5s ease-out',\n            },\n        },\n        headlineContainer: {\n            textAlign: 'center',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            color: 'rgba(255,255,255,0.8)',\n            textTransform: 'uppercase',\n        },\n        headline: {\n            margin: 0,\n        },\n        scrollInformation: {\n            position: 'absolute',\n            bottom: theme.spacing(2),\n            display: 'flex',\n            flexDirection: 'column',\n            textAlign: 'center',\n            color: addAlpha(theme.palette.common.white, 0.5),\n            alignItems: 'center',\n            textTransform: 'uppercase',\n            '& > svg': {\n                marginBottom: theme.spacing(1),\n                fontSize: '2rem',\n            },\n        },\n    }),\n    { name: 'HeaderSection' }\n);\n\nexport interface HeaderProps {\n    className?: string;\n}\n\nexport const HeaderSection = (props: HeaderProps) => {\n    const { className } = props;\n    const classes = useStyles(props);\n\n    const theme = useTheme<Theme>();\n    const { setColor } = useSectionsScrollerContext();\n\n    const { ref, inView } = useInView({ threshold: 0.1 });\n\n    useEffect(() => {\n        if (inView) {\n            setColor(theme.palette.common.white);\n        }\n    }, [theme, inView, setColor]);\n\n    return (\n        <Section className={clsx(className, classes.root)} ref={ref}>\n            <Fade duration={2000}>\n                <div className={classes.headlineContainer}>\n                    <Typography className={classes.headline} variant='headlineBig' color='contrastPrimary'>\n                        Jan Höck\n                    </Typography>\n                    <Typography variant='subHeadlineBig' color='contrastPrimary'>\n                        Senior Frontend Entwickler\n                    </Typography>\n                </div>\n            </Fade>\n            <div className={classes.scrollInformation}>\n                <CgMouse />\n                <Typography color='inherit' variant='secondary'>\n                    Finde mehr heraus\n                </Typography>\n            </div>\n        </Section>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/me.5142fb10.jpg\";","import React from 'react';\nimport meImage from '../assets/me.jpg';\nimport { createUseStyles } from 'react-jss';\nimport { Theme } from '../../../tools/theme/theme';\nimport clsx from 'clsx';\nimport { LinesDesignHighlight } from '../../../components/DesignHighlights';\n\ntype ClassKeys = 'root' | 'image' | 'lines';\nconst useStyles = createUseStyles<ClassKeys, MeImageProps, Theme>(\n    {\n        root: {\n            position: 'relative',\n            overflow: 'hidden',\n            width: 350,\n            height: 350,\n        },\n        image: {\n            width: 'inherit',\n            height: 'inherit',\n            clipPath: 'polygon(0 0, 100% 0%, 100% 77%, 0% 100%)',\n            position: 'relative',\n            zIndex: 1,\n        },\n        lines: {\n            width: 'calc(100% - 10px)',\n            position: 'absolute',\n            bottom: 10,\n        },\n    },\n    { name: 'MeImage' }\n);\n\nexport interface MeImageProps {\n    className?: string;\n}\n\nexport const MeImage = (props: MeImageProps) => {\n    const { className } = props;\n    const classes = useStyles(props);\n\n    return (\n        <div className={clsx(className, classes.root)}>\n            <img className={classes.image} src={meImage} alt='Jan Höck' />\n            <LinesDesignHighlight className={classes.lines} />\n        </div>\n    );\n};\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ClassesOverride } from '../../tools/types/ReactJSSTypes';\nimport clsx from 'clsx';\nimport { Theme } from '../../tools/theme/theme';\nimport { mergeClasses } from '../../tools/theme/mergeClasses';\n\ntype ClassKeys = 'root' | 'one' | 'two';\nconst useStyles = createUseStyles<ClassKeys, TrianglesProps, Theme>(\n    (theme) => ({\n        root: {\n            position: 'relative',\n            height: '10vh',\n        },\n        triangle: {\n            width: '150vw',\n            height: '20vh',\n            position: 'absolute',\n        },\n        one: {\n            backgroundColor: theme.palette.primary.light,\n            transform: 'rotate(3deg)',\n        },\n        two: {\n            backgroundColor: theme.palette.primary.main,\n            transform: 'rotate(-6deg)',\n        },\n    }),\n    { name: 'Triangles' }\n);\n\nexport interface TrianglesProps {\n    className?: string;\n    classes?: ClassesOverride<ClassKeys>;\n}\n\nexport const Triangles = (props: TrianglesProps) => {\n    const { className, classes: classesProp } = props;\n    const classes = mergeClasses(useStyles(props), classesProp);\n\n    return (\n        <div className={clsx(className, classes.root)}>\n            <div className={clsx(classes.one, classes.triangle)} />\n            <div className={clsx(classes.two, classes.triangle)} />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport { MeImage } from './components/MeImage';\nimport clsx from 'clsx';\nimport { BackgroundTypography, Section, Typography, useSectionsScrollerContext } from '../../components';\nimport { Triangles } from '../../components/DesignHighlights/Triangles';\nimport { useInView } from 'react-intersection-observer';\nimport { Fade } from 'react-awesome-reveal';\n\ntype ClassKeys = 'root' | 'container' | 'meImage' | 'text' | 'triangles';\nconst useStyles = createUseStyles<ClassKeys, AboutMeSectionProps, Theme>(\n    (theme) => ({\n        root: {\n            backgroundColor: 'white',\n            padding: theme.spacing(3),\n        },\n        container: {\n            display: 'flex',\n            maxWidth: 1440,\n            margin: '5vh auto',\n        },\n        meImage: {\n            marginRight: theme.spacing(6),\n        },\n        text: {\n            textAlign: 'justify',\n            lineHeight: '32px',\n            zIndex: 1,\n            flex: '1 0',\n        },\n        triangles: {\n            position: 'absolute',\n            bottom: 0,\n            left: '-10vw',\n        },\n    }),\n    { name: 'AboutMeSection' }\n);\n\nexport interface AboutMeSectionProps {\n    className?: string;\n}\n\nexport const AboutMeSection = (props: AboutMeSectionProps) => {\n    const { className } = props;\n    const classes = useStyles(props);\n\n    const theme = useTheme<Theme>();\n    const { setColor } = useSectionsScrollerContext();\n\n    const { ref, inView } = useInView({ threshold: 0.1 });\n\n    useEffect(() => {\n        if (inView) {\n            setColor(theme.palette.primary.main);\n        }\n    }, [theme, inView, setColor]);\n\n    return (\n        <Section className={clsx(className, classes.root)} ref={ref}>\n            <BackgroundTypography variant='headlineBig'>Wer bin ich?</BackgroundTypography>\n            <div className={classes.container}>\n                <Fade direction='left'>\n                    <MeImage className={classes.meImage} />\n                </Fade>\n                <Fade direction='up'>\n                    <Typography className={classes.text} color='secondary'>\n                        Ich heiße Jan Höck und wurde am 17.01.1996 in Siegburg geboren. Ich habe eine Ausbildung zum Anwendungsentwicker absolviert\n                        und arbeite seit dem in diesem Beruf. Doch wie kam ich dazu mich für diesen Berufsweg zu entscheiden? Als meinen Freunden und\n                        mir mit 14 Jahren das Spielen von „Minecraft“ zu eintönig wurde, hatten wir die Idee es durch das Programmieren von\n                        Erweiterungen abwechlunsgreicher zu gestalten. Problem dabei war nur, dass keiner von uns programmieren konnte. Kurzer Hand\n                        haben wir angefangen Youtube-Videos zu diesem Thema zu schauen, die verschiedenen Herangehensweisen erlernt und umgesetzt.\n                        Nachdem Aufbau eines Wissensfundus haben wir uns die kostenfrei zugängliche Serverdatei von „Minecraft“ heruntergeladen und\n                        das Gelernte angewandt. Durch die verschiedenen, von uns programmierten Erweiterungen haben wir es geschafft einen der größten\n                        deutschen Server aufzubauen. Andere Spieler:innen wurden auf uns aufmerksam und unterstützten uns. Hierdurch haben wir\n                        zunehmend mehr Geld mit unseren Programmierungen verdient, sodass wir über unsere Eltern ein eigenes Unternehmen anmelden\n                        mussten. So entdeckte ich mit 14 Jahren meine Leidenschaft für das Programmieren und machte anschließend mein Hobby zu meinem\n                        Beruf.\n                    </Typography>\n                </Fade>\n            </div>\n            <Triangles className={classes.triangles} />\n        </Section>\n    );\n};\n","export interface PaletteColor {\n    main: string;\n    light: string;\n    dark: string;\n    contrastColor: string;\n}\n\nexport interface Theme {\n    spacing: (value1: number, value2?: number, value3?: number, value4?: number) => string;\n    palette: {\n        common: {\n            white: string;\n        };\n        primary: PaletteColor;\n        text: {\n            primary: string;\n            secondary: string;\n            backgroundText: string;\n            contrastPrimary: string;\n        };\n    };\n}\n\nconst spacing = (value1: number, value2?: number, value3?: number, value4?: number) => {\n    const calculate = (value?: number) => (typeof value !== 'undefined' ? 8 * value : undefined);\n    const spacings = [calculate(value1), calculate(value2), calculate(value3), calculate(value4)];\n\n    return spacings\n        .filter((spacing) => typeof spacing !== 'undefined')\n        .map((spacing) => `${spacing}px`)\n        .join(' ');\n};\n\nexport const theme: Theme = {\n    spacing: spacing,\n    palette: {\n        common: {\n            white: '#FFFFFF',\n        },\n        primary: {\n            main: '#304652',\n            dark: '#213038',\n            light: '#6794ad',\n            contrastColor: '#FFFFFF',\n        },\n        text: {\n            primary: '#565151',\n            secondary: '#999',\n            contrastPrimary: 'rgba(255,255,255,0.8)',\n            backgroundText: '#FAFAFA',\n        },\n    },\n};\n","import React, { useEffect } from 'react';\nimport { Section } from '../../components/Section';\nimport clsx from 'clsx';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Theme } from '../../tools/theme/theme';\nimport { BackgroundTypography, Timeline, TimelineItem, Typography, useSectionsScrollerContext } from '../../components';\nimport { shadeColor } from '../../tools/utils/ColorUtils';\nimport { useInView } from 'react-intersection-observer';\n\ntype ClassKey =\n    | 'root'\n    | 'headlineText'\n    | 'headlineBackgroundText'\n    | 'timeline'\n    | 'timelineContainer'\n    | 'timelineDot'\n    | 'timelineLine'\n    | 'timelineContent';\nconst useStyles = createUseStyles<ClassKey, TimelineSectionProps, Theme>(\n    (theme) => ({\n        root: {\n            backgroundColor: theme.palette.primary.main,\n            padding: theme.spacing(2),\n        },\n        headlineText: {\n            color: theme.palette.common.white,\n        },\n        headlineBackgroundText: {\n            color: shadeColor(theme.palette.primary.main, 4),\n        },\n        timelineContainer: {\n            marginTop: '10vh',\n            padding: theme.spacing(3),\n        },\n        timeline: {},\n        timelineDot: {\n            backgroundColor: theme.palette.common.white,\n        },\n        timelineLine: {\n            backgroundColor: theme.palette.primary.light,\n        },\n        timelineContent: {\n            backgroundColor: theme.palette.common.white,\n        },\n    }),\n    { name: 'TimelineSection' }\n);\n\nexport interface TimelineSectionProps {\n    className?: string;\n}\n\nexport const TimelineSection = (props: TimelineSectionProps) => {\n    const { className } = props;\n    const classes = useStyles(props);\n\n    const theme = useTheme<Theme>();\n    const { setColor } = useSectionsScrollerContext();\n\n    const { ref, inView } = useInView({ threshold: 0.1 });\n\n    useEffect(() => {\n        if (inView) {\n            setColor(theme.palette.common.white);\n        }\n    }, [theme, inView, setColor]);\n\n    return (\n        <Section className={clsx(className, classes.root)} ref={ref}>\n            <BackgroundTypography\n                classes={{\n                    text: classes.headlineText,\n                    backgroundText: classes.headlineBackgroundText,\n                }}\n                variant='headlineBig'\n            >\n                Lebenslauf\n            </BackgroundTypography>\n            <div className={classes.timelineContainer}>\n                <Timeline\n                    className={classes.timeline}\n                    classes={{\n                        dot: classes.timelineDot,\n                        line: classes.timelineLine,\n                        content: classes.timelineContent,\n                    }}\n                >\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>\n                            Ausbildung zum Fachinformatiker für AnwendungsentwicklungAusbildung zum Fachinformatiker für\n                            AnwendungsentwicklungAusbildung zum Fachinformatiker für AnwendungsentwicklungAusbildung zum Fachinformatiker für\n                            Anwendungsentwicklung\n                        </Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem headline='2014 - 2016'>\n                        <Typography>Ausbildung zum Fachinformatiker für Anwendungsentwicklung</Typography>\n                        <Typography>FLOWFACT GmbH</Typography>\n                    </TimelineItem>\n                    <TimelineItem lastItem headline='2018 - 2020'>\n                        <Typography>Das ist ein Test</Typography>\n                    </TimelineItem>\n                </Timeline>\n            </div>\n        </Section>\n    );\n};\n","import React from 'react';\nimport { HeaderSection } from './sections/header';\nimport { AboutMeSection } from './sections/aboutMe';\nimport { ThemeProvider } from 'react-jss';\nimport { theme } from './tools/theme/theme';\nimport { TimelineSection } from './sections/timeline';\nimport { SectionsScroller } from './components';\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <SectionsScroller>\n                <HeaderSection />\n                <AboutMeSection />\n                <TimelineSection />\n            </SectionsScroller>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}